# Application properties
spring.application.name=shope

# Database properties
spring.datasource.url=jdbc:mysql://localhost:3306/shope?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=
spring.mvc.hiddenmethod.filter.enabled=true

# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Mail properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=shope.platform@gmail.com
spring.mail.password=${MAIL_PASSWORD:default_mail_password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# JWT properties
jwt.auth.app=authapp
jwt.auth.secret_key=${JWT_KEY:default_jwt_secret_key}
jwt.auth.expires_in=3600

# Google OAuth2 properties
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_OAUTH2_CLIENT_ID:default_client_id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_OAUTH2_CLIENT_SECRET:default_client_secret}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Stripe properties
stripe.secret=${STRIPE_SECRET:default_stripe_secret_key}

# File upload properties
FILE_ZONE=default_file_zone
FILE_UPLOAD_API_KEY=${CDN_KEY:default_cdn_key}
FILE_UPLOAD_HOST_URL=${CDN_HOST:default_cdn_host}